# 워크플로우 이름
name: Deploy API to Azure Function App

# 언제 실행할지 정의: main 브랜치에 코드가 push 될 때
on:
  push:
    branches:
      - main

# 수정하기 쉽도록 환경 변수로 앱 이름과 폴더 경로를 지정
env:
  AZURE_FUNCTIONAPP_NAME: 'GetRandomMessage'  # 본인의 함수 앱 이름
  API_DIRECTORY: 'api'                        # 함수 코드가 있는 폴더 (api)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production # 배포 환경 지정

    steps:
      # 1. GitHub 저장소의 코드를 가져옴
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      # 2. Node.js 환경 설정
      - name: Setup Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '${{ env.API_DIRECTORY }}/package-lock.json'

      # 3. 'api' 폴더로 이동해서 의존성 설치
      - name: npm install in api directory
        run: npm install
        working-directory: ${{ env.API_DIREC<|hidden|>TORY }} # ★★★ api 폴더에서만 작업

      # 4. (추가) Azure 인프라 준비를 위한 잠시 대기
      - name: Wait for 30 seconds for Azure to be ready
        run: sleep 30s
        shell: bash

      # 5. Azure에 배포 (함수 앱 전용 액션 사용)
      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.API_DIRECTORY }} # ★★★ api 폴더만 배포
          # ★★★ 이 부분은 절대 수정하지 마세요 ★★★
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          clean: true # ★★★ 배포 전 기존 파일 모두 삭제